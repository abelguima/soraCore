<?xml version="1.0"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="/usr/local/irg/apps/RTI/ndds.4.5d/resource/qos_profiles_4.5d/schema/rti_dds_qos_profiles.xsd">
  <!-- ################################################################### -->
  <!-- ## RapidQosLibrary -->
  <!-- ################################################################### -->
  <qos_library name="LBPQosLibrary">
    <qos_profile name="LBPDefaultQos" is_default_qos="true">
      <participant_qos>
        <user_data>
          <value>0x0a0b0c</value>
        </user_data>
        <wire_protocol>
          <!-- For inter-center comm, a port-range on the firewalls has to be opened. -->
          <!-- DDS traffic has to flow through those ports. -->
          <!-- The RAFT standard ports used for DDS traffic are 4910 to 4949. -->
          <!-- Each DDS domain has 20 ports reserved in that setup, with domains 0 & 1 visible through the firewalls. -->
          <!-- This allows for 9 domain participant on each computer per domain. -->
          <!-- If this becomes an issue we have to review those port settings. -->
          <rtps_well_known_ports>
            <port_base>4910</port_base>
            <domain_id_gain>20</domain_id_gain>
            <participant_id_gain>2</participant_id_gain>
            <builtin_multicast_port_offset>1</builtin_multicast_port_offset>
            <builtin_unicast_port_offset>3</builtin_unicast_port_offset>
            <user_multicast_port_offset>0</user_multicast_port_offset>
            <user_unicast_port_offset>2</user_unicast_port_offset>
          </rtps_well_known_ports>
          <rtps_reserved_port_mask>MASK_DEFAULT</rtps_reserved_port_mask>
        </wire_protocol>
        <transport_builtin>
          <!-- mask>UDPv4</mask -->
        </transport_builtin>
        <discovery>
          <!-- By default, we do an explicit configuration through the discovery-peers files. -->
          <!-- This limits accidental traffic on the robot-networks. -->
          <!-- For the ground-side router, allowing unknown peers might be preferred. -->
          <accept_unknown_peers>true</accept_unknown_peers>
        </discovery>
        <discovery_config>
          <participant_liveliness_lease_duration>
            <sec>1000</sec>
            <nanosec>DURATION_ZERO_NSEC</nanosec>
          </participant_liveliness_lease_duration>
          <participant_liveliness_assert_period>
            <sec>300</sec>
            <nanosec>DURATION_ZERO_NSEC</nanosec>
          </participant_liveliness_assert_period>
          <initial_participant_announcements>1</initial_participant_announcements>
          <min_initial_participant_announcement_period>
            <sec>1</sec>
            <nanosec>0</nanosec>
          </min_initial_participant_announcement_period>
          <max_initial_participant_announcement_period>
            <sec>1</sec>
            <nanosec>0</nanosec>
          </max_initial_participant_announcement_period>
        </discovery_config>
        <property>
          <value>
            <!-- allow/deny lists -->
            <!-- we try to exclude all vmware virtual network interfaces -->
            <element>
              <name>dds.transport.UDPv4.builtin.parent.deny_interfaces</name>
              <value>172.18.0.1, 192.9.206.1, 192.9.202.1, 192.168.163.1, 192.168.174.1</value>
            </element>
            <element>
              <name>dds.transport.UDPv4.builtin.parent.deny_multicast_interfaces</name>
              <value>172.18.0.1, 192.9.206.1, 192.9.202.1, 192.168.163.1, 192.168.174.1</value>
            </element>
          </value>
        </property>
      </participant_qos>
      <publisher_qos>
        <presentation>
          <ordered_access>true</ordered_access>
        </presentation>
      </publisher_qos>
      <subscriber_qos>
        <presentation>
          <ordered_access>true</ordered_access>
        </presentation>
      </subscriber_qos>
      <datawriter_qos>
        <protocol>
          <rtps_object_id>128</rtps_object_id>
        </protocol>
      </datawriter_qos>
      <datareader_qos>
        <protocol>
          <rtps_object_id>256</rtps_object_id>
        </protocol>
      </datareader_qos>
    </qos_profile>

    <qos_profile name="LBPWriterQos" base_name="LBPDefaultQos">
      <participant_qos>
        <participant_name>
          <name>RawWriter</name>
        </participant_name>
      </participant_qos>
    </qos_profile>

    <qos_profile name="LBPReaderQos" base_name="LBPDefaultQos">
      <participant_qos>
        <participant_name>
          <name>RawReader</name>
        </participant_name>
      </participant_qos>
    </qos_profile>
  </qos_library>

  <qos_library name="LBEDQosLibrary" >
    <qos_profile name="LBPWriterQos" base_name="LBPQosLibrary::LBPWriterQos">
      <participant_qos>
        <discovery_config>
          <builtin_discovery_plugins>SEDP</builtin_discovery_plugins>
        </discovery_config>
      </participant_qos>
    </qos_profile>

    <qos_profile name="LBEDReaderQos" base_name="LBPQosLibrary::LBPReaderQos">
      <participant_qos>
        <discovery_config>
          <builtin_discovery_plugins>SEDP</builtin_discovery_plugins>
        </discovery_config>
      </participant_qos>
    </qos_profile>
  </qos_library>

  <qos_library name="LBPDQosLibrary" >
    <qos_profile name="LBPWriterQos" base_name="LBPQosLibrary::LBPWriterQos">
      <participant_qos>
        <discovery_config>
          <builtin_discovery_plugins>SPDP</builtin_discovery_plugins>
        </discovery_config>
      </participant_qos>
    </qos_profile>

    <qos_profile name="LBPReaderQos" base_name="LBPQosLibrary::LBPReaderQos">
      <participant_qos>
        <discovery_config>
          <builtin_discovery_plugins>SPDP</builtin_discovery_plugins>
        </discovery_config>
      </participant_qos>
    </qos_profile>
  </qos_library>

  <qos_library name="LBSDQosLibrary" >
    <qos_profile name="LBPWriterQos" base_name="LBPQosLibrary::LBPWriterQos">
      <participant_qos>
        <discovery_config>
          <builtin_discovery_plugins>MASK_NONE</builtin_discovery_plugins>
        </discovery_config>
      </participant_qos>
    </qos_profile>

    <qos_profile name="LBEDReaderQos" base_name="LBPQosLibrary::LBPReaderQos">
      <participant_qos>
        <discovery_config>
          <builtin_discovery_plugins>MASK_NONE</builtin_discovery_plugins>
        </discovery_config>
      </participant_qos>
    </qos_profile>
  </qos_library>

</dds>
